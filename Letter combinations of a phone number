class Solution:
    
    def letterCombinations(self, digits: str) -> List[str]:

        if digits == "":
            return set()
        mappings = {'2': ['a', 'b', 'c'], '3': ['d', 'e', 'f'], '4': ['g', 'h', 'i'], '5': ['j', 'k', 'l'],
                            '6': ['m', 'n', 'o'], '7': ['p', 'q', 'r', 's'], '8': ['t', 'u', 'v'], '9': ['w', 'x', 'y', 'z']}
        
        res_old = set()
        res_new = set()
        n = len(digits)

        for i in range(n):
            if i==0:
                res_new = set([c for c in mappings[digits[i]]])
                res_old = res_new.copy()
                continue
            res_new = set()
            for r in res_old:
                for k in mappings[digits[i]]:
                    res_new.add(r+k)
                res_old = res_new.copy()
                
        return list(res_new)

