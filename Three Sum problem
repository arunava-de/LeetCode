# Given an array nums of n integers, are there elements a, b, c in nums such that a + b + c = 0?
# Find all unique triplets in the array which gives the sum of zero.

def threeSum(nums):
    # Sorting will ensure uniqueness, except when there are repeated values
    nums.sort()

    result = []
    # Maintain two pointers, one for the left element on the right of current element and other for right element on
    # the right of current element
    for i in range(len(nums)-2):
        if i>0 and nums[i]==nums[i-1]:
            # This ensures complete uniqueness
            continue
        n = len(nums)
        l = i+1
        r = n-1

        while l<r:
            sum = nums[i] + nums[l] + nums[r]

            if sum==0:
                result.append([nums[i],nums[l],nums[r]])
                while l<n-1 and nums[l] == nums[l+1]:
                    l += 1
                while r>0 and nums[r] == nums[r-1]:
                    r -= 1
                l += 1
                r -= 1
            elif sum<0:
                l += 1
            else:
                r -= 1


    return result

print(threeSum([-1, 0, 1, 2, -1, -4]))
