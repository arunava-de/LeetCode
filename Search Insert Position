class Solution:
    def searchInsert(self, nums: List[int], target: int) -> int:
        
        if len(nums)==0:
            return 0
        elif len(nums)==1:
            if target<=nums[0]:
                return 0
            else:
                return 1
        
        low = 0
        high = len(nums)-1
        
        while low<=high:
            
            mid = low + (high-low)//2
            
            if nums[mid]==target:
                return mid
            elif target<nums[mid]:
                if mid==0:
                    return 0
                elif nums[mid-1]<target and target<nums[mid]:
                    return mid
                else:
                    high = mid-1
            else:
                if mid==len(nums)-1:
                    return len(nums)
                elif nums[mid]<target and target<nums[mid+1]:
                    return mid+1
                else:
                    low = mid+1
        
        
